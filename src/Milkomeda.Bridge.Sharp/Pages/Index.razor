@page "/"
@using Models

<PageTitle>Milkomeda Bridge dApp</PageTitle>

<MudAppBar Color="Color.Primary" Fixed="false">
    <MudText>Milkomeda Bridge dApp</MudText>
    <MudSpacer />
    <div class="flex gap-2">
        <MudButton Variant="Variant.Outlined" Class="flex" EndIcon="@MilkomedaBridgeIcons.EthereumIcon"
            OnClick="OnBtnConnectMilkomedaClickedAsync">
            @if (string.IsNullOrEmpty(MilkomedaAddress))
            {
                <MudText>Connect to Milkomeda</MudText>
            }
            else
            {
                <MudText>Connected: @MilkomedaAddress.Substring(1,6) ...</MudText>
            }
        </MudButton>
        <MudButton Variant="Variant.Outlined" Class="flex" EndIcon="@MilkomedaBridgeIcons.CardanoIcon">
            <MudText>Connect to Cardano</MudText>
        </MudButton>
    </div>
</MudAppBar>

<div class="grid gap-2 grid-cols-12 grid-rows-3">
    <div class="col-start-1 col-start-6" />
    <MudCard Class="col-start-4 col-end-10 relative">
        @if (IsLoading)
        {
            <MudCard class="w-[100%] h-[100%] absolute z-100 flex items-center">
                <div class="flex flex-col w-[100%] text-center">
                    <MudProgressCircular Class="mx-auto align-middle" Color="Color.Primary" Indeterminate="true" />
                    <MudText>loading please wait...</MudText>
                </div>
            </MudCard>
        }
        <MudCardContent>
            <MudText Class="text-xl font-bold subpixel-antialiased">Select a token to bridge</MudText>
            <MudText Class="text-sm">Having Issues? Get Help!</MudText>
            <div class="mt-2 grid grid-cols-3">
                <MudButton StartIcon="@MilkomedaBridgeIcons.MilkomedaIcon">Milkomeda</MudButton>
                <div class="flex justify-center">
                    <MudFab StartIcon="@Icons.Filled.CompareArrows" Color="Color.Primary" DisableElevation="true" />
                </div>
                <MudButton StartIcon="@MilkomedaBridgeIcons.CardanoBlueIcon">Cardano</MudButton>
            </div>
            <div class="flex">
                <MudTextField Class="basis-3/4" Value=@(0) InputType="InputType.Number" Label="Amount"
                    Variant="Variant.Outlined"></MudTextField>
                <MudSelect Class="basis-1/4" T="CardanoAsset" Label="Token" Variant="Variant.Outlined"
                    AnchorOrigin="Origin.BottomCenter" @bind-Value="SelectedCardanoAsset">
                    @foreach (CardanoAsset asset in BridgeAssets)
                    {
                        <MudSelectItem Value="asset">
                            <div class="flex gap-1">
                                @* <MudIcon Icon="@MilkomedaBridgeIcons.CardanoBlueIcon" /> *@
                                <MudText>@asset.Symbol</MudText>
                            </div>
                        </MudSelectItem>
                    }
                </MudSelect>
            </div>
            <div class="flex mt-2 gap-4">
                @if (UserAssetBalances.ContainsKey(SelectedCardanoAsset))
                {
                    <MudButton>Balance: @UserAssetBalances[SelectedCardanoAsset]</MudButton>
                }
                else
                {
                    <MudButton>Balance: 0.00</MudButton>
                }
                <MudSpacer />
                <MudButton Variant="Variant.Filled" Color="Color.Primary">Max</MudButton>
            </div>
        </MudCardContent>
        <MudCardActions>
            <div class="flex justify-center w-[100%]">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" EndIcon="@Icons.Outlined.LabelImportant">
                    Transfer
                </MudButton>
            </div>
        </MudCardActions>
    </MudCard>
</div>
